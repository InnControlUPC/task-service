spring.application.name=inncontrol-task-service

spring.datasource.url=jdbc:mysql://${MYSQL_TASK_HOST:localhost}:${MYSQL_TASK_PORT:3306}/inncontrol_tasks?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true

spring.datasource.username=${MYSQL_TASK_USERNAME:root}
spring.datasource.password=${MYSQL_TASK_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.profiles.default=dev
server.port=${PORT:8045}

# Spring Data JPA Configuration
spring.jpa.show-sql=true

# Open API Configuration
springdoc.api-docs.path=/api/v1/tasks/docs

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=inncontrol-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


#Spring Data JPA Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.naming.physical-strategy=com.github.inncontrol.shared.infrastructure.persistence.jpa.configuration.strategy.SnakeCaseWithPluralizedTablePhysicalNamingStrategy

eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka}
